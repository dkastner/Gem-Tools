#!/bin/bash

function del_matching_line () {
  file=$1
  pattern=$2
  extra_line=$3

  line_to_delete=`grep "$pattern" "$file" -n | awk 'BEGIN { FS = ":" } ; { print $1 }'`
  sed -i '' "${line_to_delete}d" $file

  if [[ $extra_line == "yes" ]]; then
    sed -i '' "${line_to_delete}d" $file
  fi
}

function upgrade_gem () {
    emitter=$1
    git tag ruby187
    git push --tags
    git fetch origin
    git reset --hard origin/master

    sed -e "s/add_dependency 'emitter', '[^']*'/add_dependency 'emitter', '~>0.1.7'/" -i .sed Rakefile
    NOBUNDLE=true rake gemspec
    bundle update
    git add Rakefile Gemfile.lock $emitter.gemspec
    git commit -m "Upgraded to latest emitter" --amend
}

function rm_sed () {
  emitter=$1

  git rm -f lib/$emitter/carbon_model.rb.sed
  git commit -m "Upgraded emitter" --amend
}

function copy_fixtures_to_cm1 () {
  emitter=$1
  mkdir -p ~/cm1/spec/fixtures/$emitter
  cp ~/$emitter/lib/test_support/db/fixtures/* ~/cm1/spec/fixtures/$emitter
}

function license () {
  emitter=$1
  cp ~/gemtools/agpl-3.0.txt ~/$emitter/LICENSE
}

function git_status () {
  emitter=$1

  git status
}

function git_add_commit_rebase () {
  emitter=$1

#  git add LICENSE
#  git commit -m "Changed LICENSE to AGPL"
#  if $?; then
   git push origin master
#  else
#    echo "$emitter failed to rebase"
#  fi
}

function add_copyright_to_carbon_model () {
  cp lib/$emitter/carbon_model.rb /tmp/carbon_model.rb

  sed -i '' "
  1i\\
# Copyright Â© 2010 Brighter Planet.\\
# See LICENSE for details.\\
# Contact Brighter Planet for dual-license arrangements.\\
\\
" /tmp/carbon_model.rb
  cp /tmp/carbon_model.rb lib/$emitter/carbon_model.rb
}


directory=
commands=()
while [ "$1" != "" ]; do
  case $1 in
    --directory )
      shift
      directory=$1
      ;;
    * ) 
      newcmd=($1)
      commands=( ${commands[@]} ${newcmd[@]} )
      ;;
  esac
  shift
done

if [[ $directory == '' ]]; then
  for file in `find . -type l`; do
    case $file in
      .|..)
        echo "Skipping $file"
        ;;
      *)
        emitter=`basename $file`
        echo "Processing $emitter in $file"

        cwd=`pwd`
        cd $file
        for command in $commands; do
          echo "Running $command"
          $command $emitter
        done
        cd $cwd

        ;;
    esac
  done
else
  emitter=`basename ``pwd```
  for command in commands; do
    `$command $emitter`
  done
fi
